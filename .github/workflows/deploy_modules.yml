name: Build and Upload Artifacts

on:
  push:
    branches:
      - PA-1042

jobs:
  find-modules:
    name: Find Modules
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      folders: ${{ steps.modules.outputs.folders }}

    steps:
      - uses: actions/checkout@v4

      - name: List Sub-Folders
        id: modules
        uses: kmanimaran/list-folder-action@v4
        with:
          path: ddbk-to-json

      - name: Folders
        shell: bash
        run: |
            echo ${{ steps.modules.outputs.folders }}
    

  build:
    runs-on: ubuntu-latest
    needs: find-modules
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ddbk-to-json

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install

    - name: Verify Build Output
      run: |
        pwd 
        ls -la

    - name: Ouutput Folders
      env:
        folders: ${{ needs.find-modules.outputs.folders}}
      run: echo $folders

    - name: Check for .nar files and upload artifacts
      id: check
      shell: bash
      env:
        folders: ${{ needs.find-modules.outputs.folders}}
      run: |
        echo $folders
        mkdir -p artifacts
        for dir in $folders; do
          echo ${dir}
          if [ -f "${dir}/target/*.nar" ]; then
            echo "Found .nar file in ${dir}, creating and uploading artifact..."
            mv "${dir}/target/*.nar" "artifacts/"
            echo "GENERATES_NAR=true" >> $GITHUB_ENV
          fi
        done

    - name: Upload Artifact
      if: env.GENERATES_NAR == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: artifacts




#  artifacts:
#    name: Upload Artifacts
#    needs:
#      - find-modules
#      - build
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    defaults:
#      run:
#        working-directory: ${{ matrix.folder }}
#    strategy:
#      matrix:
#        folder: ${{ fromJson(needs.find-modules.outputs.folders )}}
#    steps:
#      - name: do something
#        run: echo ${{ matrix.folder }}
#
#  artifacts1:
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    if: ${{ needs.build.outputs.paths != '[]' }}
#    strategy:
#      matrix:
#        dir: ${{ fromJSON(needs.compute_diff.outputs.changed_dirs) }}
#    defaults:
#      run:
#        working-directory: ${{ matrix.dir }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'adopt'
#          java-version: '11'
#          server-id: github
#          settings-path: ${{ github.workspace }}
#      
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build with Maven
#        run: mvn clean install -DskipTests
#
#  