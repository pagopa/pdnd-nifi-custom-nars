name: Build and Upload Artifacts

on:
  push:
    branches:
      - test_changed_dirs
    #tags:
    #  - '*'

jobs:
  compute_diff:
    name: Compute diff on folders
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Get changed folders
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          dir_names_max_depth: 1
          since_last_remote_commit: true
          matrix: true
          quotepath: false
          files_ignore: .github/**
      - name: Filter directories
        id: filter-dirs
        shell: bash
        env: 
          changed_libs: "${{ steps.changed-files.outputs.all_changed_files }}"
        run: |
            echo $changed_libs
    outputs:
      changed_dirs: ${{ steps.changed-files.outputs.all_changed_files }}
#find-modules:
#  name: Find Modules
#  if: ${{ needs.compute_diff.outputs.changed_dirs != '[]' }}
#  runs-on: ubuntu-latest
#  needs: 
#    - compute_diff
#  timeout-minutes: 5
#  strategy:
#    matrix: 
#      dir: ${{ fromJSON(needs.compute_diff.outputs.changed_dirs) }}
#  defaults:
#    run:
#      working-directory: ${{ matrix.dir }}
#  steps:
#    - uses: actions/checkout@v4
#    - name: List Sub-Folders
#      id: modules
#      uses: kmanimaran/list-folder-action@v4
#      with:
#        path: ${{ matrix.dir }}
#    - name: finded modules
#      shell: bash
#      run: |
#          echo ${{ steps.modules.outputs.folders }}
#  outputs:
#    folders: ${{ steps.modules.outputs.folders }}
#
#build:
#  name: Build and Upload Artifacts
#  if: ${{ needs.compute_diff.outputs.changed_dirs != '[]' }}
#  runs-on: ubuntu-latest
#  needs: 
#    - compute_diff
#    - find-modules
#  timeout-minutes: 30
#  strategy:
#    matrix: 
#      dir: ${{ fromJSON(needs.compute_diff.outputs.changed_dirs) }}
#  defaults:
#    run:
#      working-directory: ${{ matrix.dir }}
#  steps:
#  - uses: actions/checkout@v4
#  - name: Set up JDK
#    uses: actions/setup-java@v4
#    with:
#      java-version: '11'
#      distribution: 'adopt'
#  - name: Cache Maven packages
#    uses: actions/cache@v4
#    with:
#      path: ~/.m2/repository
#      key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#      restore-keys: ${{ runner.os }}-m2
#  - name: Build with Maven
#    run: mvn clean install
#  - name: Check for .nar files and upload artifacts
#    id: check
#    shell: bash
#    env:
#      folders: ${{ needs.find-modules.outputs.folders}}
#    run: |
#      mkdir -p artifacts
#      IFS=',' read -ra ADDR <<< "${folders//[\[\]\" ]/}"
#      for dir in "${ADDR[@]}"; do
#        for file in "${dir}/target/"*.nar; do
#          if [ -f "$file" ]; then
#            echo "Found .nar file in ${dir}, creating and uploading artifact..."
#            mv "$file" "artifacts/"
#            echo "GENERATES_NAR=true" >> $GITHUB_ENV
#          fi
#        done
#      done
#  - name: Upload Artifact
#    uses: actions/upload-artifact@v4
#    if: env.GENERATES_NAR == 'true'
#    with:
#      name: build-artifacts
#      path: ${{ matrix.dir }}/artifacts/**/*
#  - uses: actions/download-artifact@v4
#    with:
#      name: build-artifacts
#