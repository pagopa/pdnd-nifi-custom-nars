name: Build and Upload Artifacts

on:
  push:
    tags:
      - '*'

jobs:
  compute_diff:
    name: Compute diff on folders
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Get changed folders
        id: changed-files
        uses: tj-actions/changed-files@2d756ea4c53f7f6b397767d8723b3a10a9f35bf2 # v44
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          dir_names_max_depth: 1
          matrix: true
          quotepath: false
          files_ignore: .github/**
      - name: Filter directories
        id: filter-dirs
        shell: bash
        env: 
          changed_libs: "${{ steps.changed-files.outputs.all_changed_files }}"
        run: |
            echo $changed_libs
    outputs:
      changed_dirs: ${{ steps.changed-files.outputs.all_changed_files }}
  find-modules:
    name: Find Modules
    if: ${{ needs.compute_diff.outputs.changed_dirs != '[]' }}
    runs-on: ubuntu-latest
    needs: 
      - compute_diff
    timeout-minutes: 5
    strategy:
      matrix: 
        dir: ${{ fromJSON(needs.compute_diff.outputs.changed_dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: List Sub-Folders
        id: modules
        uses: kmanimaran/list-folder-action@6d9f96e7d8cfa8273c443f939f703c5190dbd2c8 # v4
        with:
          path: ${{ matrix.dir }}
      - name: finded modules
        shell: bash
        run: |
            echo ${{ steps.modules.outputs.folders }}
    outputs:
      folders: ${{ steps.modules.outputs.folders }}

  build:
    name: Build and Upload Artifacts
    if: ${{ needs.compute_diff.outputs.changed_dirs != '[]' }}
    runs-on: ubuntu-latest
    needs: 
      - compute_diff
      - find-modules
    timeout-minutes: 30
    strategy:
      matrix: 
        dir: ${{ fromJSON(needs.compute_diff.outputs.changed_dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Set up JDK
      uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cache Maven packages
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn clean install
    - name: Check for .nar files and upload artifacts
      id: check
      shell: bash
      env:
        folders: ${{ needs.find-modules.outputs.folders}}
      run: |
        mkdir -p artifacts
        IFS=',' read -ra ADDR <<< "${folders//[\[\]\" ]/}"
        for dir in "${ADDR[@]}"; do
          for file in "${dir}/target/"*.nar; do
            if [ -f "$file" ]; then
              echo "Found .nar file in ${dir}, creating and uploading artifact..."
              mv "$file" "artifacts/"
              echo "GENERATES_NAR=true" >> $GITHUB_ENV
            fi
          done
        done
    - name: Upload Artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      if: env.GENERATES_NAR == 'true'
      with:
        name: build-artifacts
        path: ${{ matrix.dir }}/artifacts/**/*
    - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        name: build-artifacts
